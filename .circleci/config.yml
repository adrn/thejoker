# Python CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2.1

apt-install: &apt-install
  name: Install apt packages
  command: |
    sudo apt-get update
    sudo apt-get install build-essential pandoc

pip-install: &pip-install
  name: Install Python dependencies
  command: |
    python3 -m venv venv
    . venv/bin/activate
    pip install -U pip
    pip install --progress-bar off -r requirements.txt

pip-install-dev: &pip-install-dev
  name: Install Python development dependencies
  command: |
    python3 -m venv venv
    . venv/bin/activate
    pip install -U pip
    pip install --progress-bar off -r requirements-dev.txt

master-or-pr-check: &master-or-pr-check
  name: Only build branches that aren't "master" if this is a PR
  command: |
    if [[ -z "${CIRCLE_PULL_REQUEST}" || "${CIRCLE_BRANCH}" != "master" ]]; then
      echo "HALTING"
      circleci step halt
    fi

ci-skip-check: &ci-skip-check
  name: Check for [ci skip]
  command: bash .circleci/ci_skip_check.sh

jobs:

  # First, the egg-info tests:
  egg-info-36:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: python setup.py egg_info

  egg-info-37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: python setup.py egg_info

  # Now the tests:
  test-36:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: *ci-skip-check
      - run: *master-or-pr-check
      - run: *apt-install
      - run: *pip-install-dev
      - run:
          name: Run setup test
          command: |
            . venv/bin/activate
            python3 setup.py test

  test-37:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: *ci-skip-check
      - run: *master-or-pr-check
      - run: *apt-install
      - run: *pip-install-dev
      - run:
          name: Run setup test
          command: |
            . venv/bin/activate
            python3 setup.py test

  test-coverage:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: *ci-skip-check
      - run: *master-or-pr-check
      - run: *apt-install
      - run: *pip-install-dev
      - run:
          name: Run test coverage
          command: |
            . venv/bin/activate
            pip install coveralls
            python3 setup.py test --coverage
            coveralls --rcfile='thejoker/tests/coveragerc'

  # docs build
  build-docs:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: *ci-skip-check
      - run: *master-or-pr-check
      - run: *apt-install
      - run: *pip-install-dev

      - run:
          name: Build documentation
          command: |
            . venv/bin/activate
            python setup.py install build_docs -w
      - store_artifacts:
          path: docs/_build/html
      - run:
          name: Built documentation is available at
          command: |
            DOCS_URL="${CIRCLE_BUILD_URL}/artifacts/${CIRCLE_NODE_INDEX}/${CIRCLE_WORKING_DIRECTORY/#\~/$HOME}/docs/_build/html/index.html"; echo $DOCS_URL

workflows:
  thejoker:
    jobs:
      - egg-info-36
      - egg-info-37
      - test-36:
          requires:
            - egg-info-36
      - test-37:
          requires:
            - egg-info-37
      - test-coverage:
          requires:
            - test-37
      - build-docs:
          requires:
            - test-37

notify:
  webhooks:
    - url: https://giles.cadair.com/circleci
